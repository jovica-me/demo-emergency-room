import AddPregledi from "@/components/AddPreglediDialog";
import { ProstaOdjava } from "@/components/OdjavaPoseteDialog";
import Table from "@/components/Table";
import MainLayout from "@/layouts/MainLayout";
import { RouterOutputs, api } from "@/utils/api";
import { createColumnHelper, getCoreRowModel } from "@tanstack/react-table";
import Head from "next/head";
import Link from "next/link";
import { useRouter } from "next/router";
import { createContext, use, useContext, useEffect, useState } from "react";
import { flushSync } from "react-dom";

type PacijentIPosete = RouterOutputs["pacijent"]["getOneWithIdAndPosete"];

interface PacijentIPoseteValue {
  idPosete: string | null;
  idPregleda: string;
  setIdPosete: (x: string) => void;
  setIdPregleda: (x: string) => void;
}

export const PacijentContext = createContext<PacijentIPoseteValue>({
  idPosete: "",
  idPregleda: "",
  setIdPosete: () => {},
  setIdPregleda: () => {},
});
export default function Page({}) {
  const router = useRouter();
  const id = router.query.id as string;
  return (
    <MainLayout>
      <Head>
        <title>Poseta - </title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className="container flex flex-col  p-4">
        {/* <div className="grid  grid-cols-[3fr_2fr] items-center justify-center">
          <div>
            <h2 className="text-lg font-medium text-gray-800  ">Pacijenti</h2>

            <p className="mt-1 text-sm text-gray-500  "></p>
          </div>
        </div> */}

        {id && <Layout id={id}></Layout>}
      </main>
    </MainLayout>
  );
}

function Layout({ id }: { id: string }) {
  const { data } = api.izvestaj.getOne.useQuery(id);
  const router = useRouter();

  if (!data) return <div>Loading...</div>;

  return (
    <div className="mx-auto max-w-4xl">
      <Head>
        <title>Izvestaj - {data.pregledId}</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <div className="flex flex-col gap-4 rounded-xl bg-white p-4">
        <h2 className="text-lg font-medium text-gray-800  ">Izvestaj </h2>
        <span> Datum: {data.datum.toLocaleString()}</span>
        <span> Pregled: {data.pregledId}</span>
        {data.kontorla && (
          <>
            <span className="font-bold"> Kontrola: </span>
            <p>{data.kontorla}</p>
          </>
        )}
        {data.terapija && (
          <>
            <span className="font-bold"> Terapija: </span>
            <p>{data.terapija}</p>
          </>
        )}
        <span className="font-bold">Misljenje doktora</span>
        <p>{data.misljenjeDoktora}</p>
        <button
          onClick={() => router.back()}
          className="flex transform items-center rounded-lg bg-blue-600 px-4 py-2 font-medium capitalize tracking-wide text-white transition-colors duration-300 hover:bg-blue-500 focus:outline-none focus:ring focus:ring-blue-300 focus:ring-opacity-80"
        >
          Nazad
        </button>
      </div>
    </div>
  );
}
